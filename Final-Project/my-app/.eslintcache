[{"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Login.js":"1","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\layouts\\Header.js":"2","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\layouts\\Section.js":"3","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Register.js":"4","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\ChangePassword.js":"5","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\layouts\\Main.js":"6","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Books.js":"7","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Home.js":"8","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Movie.js":"9","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Games.js":"10","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\context\\UserContext.js":"11","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\serviceWorker.js":"12","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\index.js":"13"},{"size":2926,"mtime":1609949209547,"results":"14","hashOfConfig":"15"},{"size":1001,"mtime":1609857101536,"results":"16","hashOfConfig":"15"},{"size":1293,"mtime":1609943532944,"results":"17","hashOfConfig":"15"},{"size":3495,"mtime":1609949068832,"results":"18","hashOfConfig":"15"},{"size":3633,"mtime":1609950480542,"results":"19","hashOfConfig":"15"},{"size":346,"mtime":1609578485000,"results":"20","hashOfConfig":"15"},{"size":9459,"mtime":1609578485000,"results":"21","hashOfConfig":"15"},{"size":4965,"mtime":1610031055114,"results":"22","hashOfConfig":"15"},{"size":11912,"mtime":1610033606073,"results":"23","hashOfConfig":"15"},{"size":11361,"mtime":1610033340496,"results":"24","hashOfConfig":"15"},{"size":427,"mtime":1609578485000,"results":"25","hashOfConfig":"15"},{"size":5086,"mtime":1609578485000,"results":"26","hashOfConfig":"15"},{"size":503,"mtime":1609578485000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cspzrf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Login.js",[],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\layouts\\Header.js",["57"],"import React, { useContext } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst Header =() =>{\n  const [user, setUser] = useContext(UserContext)\n  const handleLogout = () =>{\n    setUser(null)\n    localStorage.removeItem(\"user\")\n  }\n\n  return(    \n    <header>\n      <img id=\"logo\" alt=\"logo\" src=\"/img/logo.png\" width=\"200px\" />\n      <nav>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          { user === null && <li><Link to=\"/register\">Register </Link></li> }    \n          { user && <li><Link to=\"/games\">Game List </Link></li> }\n          { user && <li><Link to=\"/movies\">Movie List </Link></li> }\n          { user === null && <li><Link to=\"/login\">Login </Link></li> }\n          { user && <li><Link to=\"/change_password\">Change Password</Link></li> }\n          { user && <li><a style={{cursor: \"pointer\"}} onClick={handleLogout}>Logout </a></li> }\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header",["58","59"],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\layouts\\Section.js",[],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Register.js",["60"],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\ChangePassword.js",["61","62"],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\layouts\\Main.js",[],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Books.js",[],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Home.js",["63","64","65"],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Movie.js",["66","67"],"import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport { Form,Alert, Input, Button, Card } from 'antd';\r\n\r\n\r\nimport \"./Movie.css\"\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\nconst Movie = () => {\r\n  const [status, setStatus]  =  useState({\r\n    showModalError: null,\r\n    showModalSuccess:null\r\n  })\r\n  const [movies, setMovies] =  useState(null)\r\n  const [input, setInput]  =  useState({\r\n   \r\n    description: \"\",\r\n    duration:0,\r\n    genre: \"\",\r\n    image_url: \"\",\r\n    rating:0,\r\n    review:\"\",\r\n    title:\"\",\r\n    year:0\r\n  })\r\n  const [selectedId, setSelectedId]  =  useState(0)\r\n  const [statusForm, setStatusForm]  =  useState(\"create\")\r\n  const [search, setSearch] = useState(\"\")\r\n  const [form] = Form.useForm();\r\n  useEffect( () => {\r\n    if (movies === null){\r\n      axios.get(`https://backendexample.sanbersy.com/api/data-movie`)\r\n      .then(res => {\r\n          setMovies(res.data.map(el=>{ return {\r\n            id: el.id, \r\n            description: el.description,\r\n            duration: el.duration,\r\n            genre: el.genre,\r\n            image_url: el.image_url,\r\n            rating: el.rating,\r\n            review: el.review,\r\n            title: el.title,\r\n            year: el.year\r\n          }\r\n        }))\r\n      })\r\n    }\r\n  }, [movies])\r\n  \r\n  const handleChange = (event) =>{\r\n    let typeOfInput = event.target.name\r\n\r\n    switch (typeOfInput){\r\n      case \"description\":\r\n      {\r\n        setInput({...input, description: event.target.value});\r\n        break\r\n      }\r\n      case \"duration\":\r\n      {\r\n        setInput({...input, duration: event.target.value});\r\n        break\r\n      }\r\n      case \"genre\":\r\n      {\r\n        setInput({...input, genre: event.target.value});\r\n          break\r\n      }\r\n      case \"image_url\":\r\n      {\r\n        setInput({...input, image_url: event.target.value});\r\n          break\r\n      }\r\n      case \"rating\":\r\n        {\r\n          setInput({...input, rating: event.target.value});\r\n            break\r\n        }\r\n      case \"review\":\r\n        {\r\n          setInput({...input, review: event.target.value});\r\n            break\r\n        }\r\n      case \"title\":\r\n        {\r\n          setInput({...input, title: event.target.value});\r\n            break\r\n        }\r\n      case \"year\":\r\n        {\r\n          setInput({...input, year: event.target.value});\r\n            break\r\n        }\r\n      case \"image_url\":\r\n        {\r\n          setInput({...input, image_url: event.target.value});\r\n            break\r\n        }\r\n    default:\r\n      {break;}\r\n    }\r\n  }\r\n   const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n     setStatus({...status, showModalError:true});\r\n      setStatus({...status, showModalSuccess:false});\r\n  };\r\n  const onFinish = (input) =>{\r\n    \r\n\r\n    let title = input.title\r\n    console.log(input)\r\n\r\n    if (title.replace(/\\s/g,'') !== \"\"){      \r\n      if (statusForm === \"create\"){  \r\n        var token=(JSON.parse(localStorage.getItem(\"user\"))['token'])\r\n         \r\n        axios.post(`https://backendexample.sanbersy.com/api/data-movie`, {\r\n          title: input.title,\r\n          description: input.description,\r\n          duration: parseInt(input.duration),\r\n          genre: input.genre,\r\n          rating: parseInt(input.rating),\r\n          review: input.review,\r\n          year: parseInt(input.year),\r\n          image_url: input.image_url\r\n\r\n        },{headers: {\"Authorization\" : \"Bearer \"+ token}})\r\n        .then(res => {\r\n            setMovies([...movies, {id: res.data.id, ...input}])\r\n            setStatus({...status, showModalError:false});\r\n            setStatus({...status, showModalSuccess:true});\r\n            setSelectedId(0)\r\n            form.setFieldsValue({\r\n            description: \"\",\r\n              duration:0,\r\n              genre: \"\",\r\n              image_url: \"\",\r\n              rating:0,\r\n              review:\"\",\r\n              title:\"\",\r\n              year:0\r\n          });\r\n            \r\n        })\r\n      }else if(statusForm === \"edit\"){\r\n        var token=(JSON.parse(localStorage.getItem(\"user\"))['token'])\r\n       \r\n        axios.put(`https://backendexample.sanbersy.com/api/data-movie/${selectedId}`, {\r\n          title: input.title,\r\n          description: input.description,\r\n          duration: parseInt(input.duration),\r\n          genre: input.genre,\r\n          rating: parseInt(input.rating),\r\n          review: input.review,\r\n          year: parseInt(input.year),\r\n          image_url: input.image_url\r\n        },{headers: {\"Authorization\" : \"Bearer \"+ token}})\r\n        .then(res => {\r\n            let singleMovie = movies.find(el=> el.id === selectedId)\r\n            singleMovie.title = input.title\r\n            singleMovie.description = input.description\r\n            singleMovie.duration = input.duration\r\n            singleMovie.genre = input.genre\r\n            singleMovie.rating = input.rating\r\n            singleMovie.review = input.review\r\n            singleMovie.year = input.year\r\n            singleMovie.image_url = input.image_url\r\n            setMovies([...movies])\r\n            setStatus({...status, showModalError:false});\r\n            setStatus({...status, showModalSuccess:true});\r\n        })\r\n      }\r\n      \r\n      setStatusForm(\"create\")\r\n      setSelectedId(0)\r\n       form.setFieldsValue({\r\n           description: \"\",\r\n        duration:0,\r\n        genre: \"\",\r\n        image_url: \"\",\r\n        rating:0,\r\n        review:\"\",\r\n        title:\"\",\r\n        year:0\r\n          });\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  const Action = ({itemId}) =>{\r\n    const handleDelete = () => {  \r\n      let newMovie = movies.filter(el => el.id !== itemId)\r\n      var token=(JSON.parse(localStorage.getItem(\"user\"))['token'])\r\n       \r\n      axios.delete(`https://backendexample.sanbersy.com/api/data-movie/${itemId}`,{headers: {\"Authorization\" : \"Bearer \"+ token}})\r\n      .then(res => {\r\n        console.log(res)\r\n      })\r\n            \r\n      setMovies([...newMovie])\r\n      \r\n    }\r\n    \r\n    const handleEdit = () =>{\r\n      let singleMovie = movies.find(x=> x.id === itemId)\r\n     \r\n       form.setFieldsValue({\r\n            title: singleMovie.title,\r\n        description: singleMovie.description,\r\n        duration: singleMovie.duration,\r\n        genre: singleMovie.genre,\r\n        rating: singleMovie.rating,\r\n        review: singleMovie.review,\r\n        year: singleMovie.year,\r\n        image_url: singleMovie.image_url\r\n          });\r\n      console.log(singleMovie)\r\n      setSelectedId(itemId)\r\n      setStatusForm(\"edit\")\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <button onClick={handleEdit}>Edit</button>\r\n        &nbsp;\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function truncateString(str, num) {\r\n    if (str === null){\r\n      return \"\"\r\n    }else{\r\n      if (str.length <= num) {\r\n        return str\r\n      }\r\n      return str.slice(0, num) + '...'\r\n    }\r\n  }\r\n  \r\n\r\n  const submitSearch = (e) =>{\r\n    e.preventDefault()\r\n    axios.get(`https://backendexample.sanbersy.com/api/data-movie`)\r\n    .then(res => {\r\n      let resMovies = res.data.map(el=>{ return {\r\n          id: el.id, \r\n          title: el.title, \r\n          description: el.description,\r\n          duration: el.duration,\r\n          genre: el.genre,\r\n          rating: el.rating,\r\n          review: el.review,\r\n          year: el.year,\r\n          image_url: el.image_url\r\n        }\r\n      })\r\n\r\n      let filteredMovies = resMovies.filter(x=> x.title.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n      setMovies([...filteredMovies])\r\n    })\r\n \r\n  }\r\n\r\n  const handleChangeSearch = (e)=>{\r\n    setSearch(e.target.value)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div>\r\n        <form onSubmit={submitSearch}>\r\n          <input type=\"text\" value={search} onChange={handleChangeSearch} />\r\n          <button>search</button>\r\n        </form>\r\n      </div>\r\n\r\n      <h1>Daftar Movie</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>No</th>\r\n            <th>Title</th>\r\n            <th>Year</th>\r\n            <th>Description</th>\r\n            <th>Duration</th>\r\n            <th>Genre</th>\r\n            <th>Rating</th>\r\n            <th>Review</th>\r\n            <th>Image Url</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n              movies !== null && movies.map((item, index)=>{\r\n                return(                    \r\n                  <tr key={index}>\r\n                    <td>{index+1}</td>\r\n                    <td>{item.title}</td>\r\n                    <td>{item.year}</td>\r\n                    <td title={item.description}>{truncateString(item.description, 20)}</td>\r\n                    <td>{item.duration}</td>\r\n                    <td>{item.genre}</td>\r\n                    <td>{item.rating}</td>\r\n                    <td>{item.review}</td>\r\n                    <td>{item.image_url}</td>\r\n                    <td>\r\n                      <Action itemId={item.id} />\r\n\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n        </tbody>\r\n      </table>\r\n     <div className=\"site-card-border-less-wrapper\">\r\n    \r\n    {\r\n        status.showModalError &&\r\n         <Alert type='error' message='Gagal Perbaharui Data' banner />\r\n   }\r\n    {\r\n        status.showModalSuccess &&\r\n         <Alert type='error' message='Berhasil Perbaharui Data' banner />\r\n   }\r\n   <Card title=\"Movie Form\" bordered={false} >\r\n      <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      form={form} \r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Title\"\r\n        name=\"title\"\r\n        rules={[{ required: true, message: 'Please input your title!' }]}\r\n        onChange={handleChange} value={input.title}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Year\"\r\n        name=\"year\"\r\n        rules={[{ required: true, message: 'Please input your year!' }]}\r\n        onChange={handleChange} value={input.year}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n        <Form.Item\r\n        label=\"Description\"\r\n        name=\"description\"\r\n        rules={[{ required: true, message: 'Please input your description!' }]}\r\n        onChange={handleChange} value={input.description}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n        <Form.Item\r\n        label=\"Duration\"\r\n        name=\"duration\"\r\n        rules={[{ required: true, message: 'Please input your duration!' }]}\r\n        onChange={handleChange} value={input.duration}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n       <Form.Item\r\n        label=\"Genre\"\r\n        name=\"genre\"\r\n        rules={[{ required: true, message: 'Please input your genre!' }]}\r\n        onChange={handleChange} value={input.genre}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n        <Form.Item\r\n        label=\"Rating\"\r\n        name=\"rating\"\r\n        rules={[{ required: true, message: 'Please input your rating!' }]}\r\n        onChange={handleChange} value={input.rating}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n        <Form.Item\r\n        label=\"Review\"\r\n        name=\"review\"\r\n        rules={[{ required: true, message: 'Please input your review!' }]}\r\n        onChange={handleChange} value={input.review}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Image Url\"\r\n        name=\"image_url\"\r\n        rules={[{ required: true, message: 'Please input your image url!' }]}\r\n        onChange={handleChange} value={input.image_url}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      \r\n      \r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Card>\r\n  </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movie","C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\pages\\Games.js",["68","69"],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\context\\UserContext.js",[],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\serviceWorker.js",[],"C:\\xampp\\htdocs\\IM-Sanbercode-Reactjs-Batch-20\\Final-Project\\my-app\\src\\index.js",[],{"ruleId":"70","severity":1,"message":"71","line":23,"column":25,"nodeType":"72","endLine":23,"endColumn":79},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":37,"nodeType":"79","messageId":"80","endLine":2,"endColumn":45},{"ruleId":"77","severity":1,"message":"78","line":4,"column":37,"nodeType":"79","messageId":"80","endLine":4,"endColumn":45},{"ruleId":"77","severity":1,"message":"81","line":16,"column":12,"nodeType":"79","messageId":"80","endLine":16,"endColumn":19},{"ruleId":"70","severity":1,"message":"82","line":132,"column":68,"nodeType":"72","endLine":132,"endColumn":80},{"ruleId":"83","severity":1,"message":"84","line":138,"column":23,"nodeType":"72","endLine":139,"endColumn":63},{"ruleId":"83","severity":1,"message":"84","line":161,"column":23,"nodeType":"72","endLine":163,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":99,"column":7,"nodeType":"87","messageId":"88","endLine":103,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":152,"column":13,"nodeType":"79","messageId":"91","endLine":152,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":139,"column":13,"nodeType":"79","messageId":"91","endLine":139,"endColumn":18},{"ruleId":"77","severity":1,"message":"92","line":230,"column":12,"nodeType":"79","messageId":"80","endLine":230,"endColumn":26},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-redeclare","'token' is already defined.","redeclared","'truncateString' is defined but never used.","no-global-assign","no-unsafe-negation"]